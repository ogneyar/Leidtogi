// +---------------+
// |   Подсказки   |
// +---------------+

// GIT
// добавление всех изменений
git add .
// внесение езменений
git commit -m "my commit"
// применение изменений
git push origin master
// приём новых изменений
git pull

// редактор файлов (nano)
sudo nano /etc/mysql/my.cnf - example

// установка БД
https://losst.ru/ustanovka-mysql-ubuntu-16-04#Установка_MySQL_57_в_Ubuntu

sudo apt remove --autoremove mysql-server mysql-client
sudo rm -Rf /var/lib/mysql
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb
// Если у вас Ubuntu 20.04 или выше, выбирайте версию для Ubuntu 18.04 - bionic
// Выберите MySQL Server and Cluster
// После этого останется выбрать нужную версию MySQL, например 5.7
// Потом нажмите ОК
sudo apt update
sudo apt-cache policy mysql-server
sudo apt install mysql-server=8.0.32-0ubuntu0.22.04.2 mysql-community-server=8.0.32-0ubuntu0.22.04.2 mysql-client=8.0.32-0ubuntu0.22.04.2
// программа запросит пароль для root пользователя
sudo mysql_secure_installation - u root -p
// На первом шаге настраивается плагин валидации пароля. Чтобы его включить нажмите Y, или его можно не включать. Затем надо задать сложность пароля, который позволит установить этот плагин. Здесь 0 означает слабый пароль, а 2 - сложный. Когда плагин будет настроен введите пароль root и подтвердите, что хотите использовать именно его
// Введите Y для отключения анонимного доступа к MySQL, затем ещё раз Y чтобы запретить подключаться к базе от имени root удаленно
// Снова Y, чтобы удалить тестовую базу данных. Затем, обновите привилегии для пользователей
sudo mysql -u root -p
CREATE USER 'mern'@'localhost' IDENTIFIED BY 'mern';


// удаление всех процессов (для SPH)
killall -2 node

// задаём пароль пользователю root при первом запуске mysql
mysql> ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'this_password';

// заливаем базу
mysql --host=127.0.0.1 -p -u root --default-character-set=utf8 mern < mern.sql

// скачиваем базу
mysqldump --host=127.0.0.1 -p -u root --disable-keys --add-drop-table --default-character-set=utf8 --result-file=mern.sql mern

// запуск веб-сервера, остановка, перезагрузка
service nginx ( start | stop | restart | reload )

// pm2
pm2 (start | stop | restart | status | delete)
pm2 save


// cerbot
sudo apt update
sudo apt install snapd
sudo snap install --classic certbot
sudo apt install python-certbot-nginx
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo certbot --nginx
// обновление сертификатов вручную
// --dry-run для тестирования (после тестирования --dry-run надо убрать)
sudo certbot renew --dry-run
// обновление сертификатов вручную (так ещё не пробовал)
certbot --force-renewal -d leidtogi.ru,server.leidtogi.ru,www.leidtogi.ru

// сжатие изображений
npm install sharp
sharp('input.jpg').resize(200, 200).toFile('ouput.jpg', function(err) {});

// ---------------------------- SQL запросы
// узнать какие есть пользователи в БД
SELECT User, Host FROM mysql.user;

// делегирование прав
GRANT ALL PRIVILEGES ON *.* TO 'dbuser'@'localhost';

// добавление колонки в таблицу
ALTER TABLE carts ADD value VARCHAR(1024) NOT NULL DEFAULT 0 AFTER id;
// пример: ALTER TABLE products ADD stock INT NOT NULL DEFAULT 1 AFTER request;

// удаление таблицы
DROP TABLE `table_name`;

// изменение записи
UPDATE `table_name` SET column_name='new_value' WHERE id=1;

// удаление содержимого таблицы
DELETE FROM `table_name`;

// добавление записей в таблицу
INSERT INTO `categories` (`id`, `name`, `url`, `is_product`, `sub_category_id`, `createdAt`, `updatedAt`) VALUES 
(NULL, 'category_name1', 'category_url1', '0', '0', '2022-02-21 12:04:23.000000', '2022-02-21 12:04:23.000000'), 
(NULL, 'category_name2', 'category_url2', '0', '0', '2022-02-21 12:04:23.000000', '2022-02-21 12:04:23.000000');
// ----------------------------


// для теста RequestPrice
UPDATE `products` SET `request` = '1' WHERE `products`.`id` = 70;

// запись в реестр автозагрузку
REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v mySQLd /d "C:/Program Files/MySQL/MySQL Server 5.5/bin/mysqld" /f


// установка NodeJS
sudo apt install build-essential checkinstall
// нам понадобится libssl
sudo apt install libssl-dev
//  установить менеджер версий NVM 
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
// перезапустить терминал
source /etc/profile
//   смотрим список доступных версий Node js
nvm ls-remote
// можно устанавливать Node js, при установке обязательно указывать версию
nvm install 18.12.1



// создание группы
sudo groupadd images
// добавление пользователя в группу 
sudo usermod -aG images admin
// узнать в каких группах состоит
groups admin
// назначить права на папку группе
sudo chgrp images /images
// узнать членов группы
members images

// смена и владельца и группы (-R рекурсия) 
chown -R admin:admin /images


